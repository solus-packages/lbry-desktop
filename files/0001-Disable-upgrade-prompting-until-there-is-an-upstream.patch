From bf44a0e78b1ad477de46281e2cbc84d589a5d9a4 Mon Sep 17 00:00:00 2001
From: Joshua Strobl <joshua@stroblindustries.com>
Date: Wed, 27 Jun 2018 20:09:39 +0300
Subject: [PATCH 1/1] Disable upgrade prompting until there is an upstream
 option to disable it.

---
 src/renderer/component/header/view.jsx  | 12 ------------
 src/renderer/component/splash/view.jsx  |  1 -
 src/renderer/modal/modalRouter/view.jsx |  3 ---
 src/renderer/redux/actions/app.js       |  4 ----
 4 files changed, 20 deletions(-)

diff --git a/src/renderer/component/header/view.jsx b/src/renderer/component/header/view.jsx
index 372380a8..676b8cb3 100644
--- a/src/renderer/component/header/view.jsx
+++ b/src/renderer/component/header/view.jsx
@@ -31,9 +31,6 @@ const Header = (props: Props) => {
     isForwardDisabled,
   } = props;
 
-  const showUpgradeButton =
-    autoUpdateDownloaded || (process.platform === 'linux' && isUpgradeAvailable);
-
   return (
     <header className="header">
       <div className="header__navigation">
@@ -93,15 +90,6 @@ const Header = (props: Props) => {
           label={isUpgradeAvailable ? '' : __('Publish')}
           description={__('Publish content')}
         />
-
-        {showUpgradeButton && (
-          <Button
-            button="primary"
-            onClick={downloadUpgradeRequested}
-            icon={icons.DOWNLOAD}
-            label={__('Upgrade App')}
-          />
-        )}
       </div>
     </header>
   );
diff --git a/src/renderer/component/splash/view.jsx b/src/renderer/component/splash/view.jsx
index 5985503c..839c5800 100644
--- a/src/renderer/component/splash/view.jsx
+++ b/src/renderer/component/splash/view.jsx
@@ -115,7 +115,6 @@ export class SplashScreen extends React.PureComponent<Props, State> {
         {isRunning && (
           <React.Fragment>
             {notificationId === MODALS.INCOMPATIBLE_DAEMON && <ModalIncompatibleDaemon />}
-            {notificationId === MODALS.UPGRADE && <ModalUpgrade />}
             {notificationId === MODALS.DOWNLOADING && <ModalDownloading />}
           </React.Fragment>
         )}
diff --git a/src/renderer/modal/modalRouter/view.jsx b/src/renderer/modal/modalRouter/view.jsx
index 9f4cd609..503ae275 100644
--- a/src/renderer/modal/modalRouter/view.jsx
+++ b/src/renderer/modal/modalRouter/view.jsx
@@ -5,7 +5,6 @@ import ModalAuthFailure from 'modal/modalAuthFailure';
 import ModalDownloading from 'modal/modalDownloading';
 import ModalAutoUpdateDownloaded from 'modal/modalAutoUpdateDownloaded';
 import ModalAutoUpdateConfirm from 'modal/modalAutoUpdateConfirm';
-import ModalUpgrade from 'modal/modalUpgrade';
 import ModalWelcome from 'modal/modalWelcome';
 import ModalFirstReward from 'modal/modalFirstReward';
 import ModalRewardApprovalRequired from 'modal/modalRewardApprovalRequired';
@@ -119,8 +118,6 @@ class ModalRouter extends React.PureComponent<Props> {
     }
 
     switch (notification.id) {
-      case MODALS.UPGRADE:
-        return <ModalUpgrade {...notificationProps} />;
       case MODALS.DOWNLOADING:
         return <ModalDownloading {...notificationProps} />;
       case MODALS.AUTO_UPDATE_DOWNLOADED:
diff --git a/src/renderer/redux/actions/app.js b/src/renderer/redux/actions/app.js
index e2e433b0..07442142 100644
--- a/src/renderer/redux/actions/app.js
+++ b/src/renderer/redux/actions/app.js
@@ -293,10 +293,6 @@ export function doDaemonReady() {
     dispatch(doBalanceSubscribe());
     dispatch(doFetchFileInfosAndPublishedClaims());
     dispatch(doFetchRewardedContent());
-    if (!selectIsUpgradeSkipped(state)) {
-      dispatch(doCheckUpgradeAvailable());
-    }
-    dispatch(doCheckUpgradeSubscribe());
     dispatch(doCheckSubscriptions());
   };
 }
-- 
2.18.0

